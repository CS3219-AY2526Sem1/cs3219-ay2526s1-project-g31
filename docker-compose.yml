services:
  ui:
    build:
      context: .
      dockerfile: ui/Dockerfile
    image: ui:latest
    env_file:
      - ./ui/.env
    ports:
      - "3000:3000"
    depends_on:
      - user-service
  user-service:
    build:
      context: .
      dockerfile: user-service/Dockerfile
    image: user-service:latest
    env_file:
      - ./user-service/.env.production.local
      - ./.env
    ports:
      - "3001:3001"
    networks:
      - peerprep
    depends_on:
      - mongo-init
  matching-service:
    build:
      context: .
      dockerfile: matching-service/Dockerfile
    image: matching-service:latest
    env_file:
      - ./matching-service/.env.production.local
      - ./.env
    ports:
      - "3002:3002"
    networks:
      - peerprep
    depends_on:
      - redis
  collaboration-service:
    build:
      context: .
      dockerfile: collaboration-service/Dockerfile
    image: collaboration-service:latest
    env_file:
      - ./collaboration-service/.env.production.local
      - ./.env
    ports:
      - "3004:3004"
    networks:
      - peerprep
    depends_on:
      - redis
  redis:
    image: redis:latest
    hostname: "redis"
    command: redis-server --requirepass ${REDIS_PASSWORD} --notify-keyspace-events Ex
    volumes:
      - ./db/redis_data_build:/data/db
    networks:
      - peerprep
  mongo:
    image: mongo
    hostname: "mongo"
    command: "mongod --replSet rs0 --bind_ip_all --port 27017"
    volumes:
      - ./db/mongo_data_build:/data/db
    networks:
      - peerprep
  mongo-init:
    image: mongo
    volumes:
      - ./db/config/init-mongo.sh:/init-mongo.sh
    entrypoint: sh /init-mongo.sh
    networks:
      - peerprep
    depends_on:
      - mongo

networks:
  peerprep:


volumes:
  redis_data:
  mongo_data:
